"""Created backtest positions table

Revision ID: a8c8d9843258
Revises: ab50ab9c48f0
Create Date: 2025-09-13 14:02:21.503917

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'a8c8d9843258'
down_revision: Union[str, Sequence[str], None] = 'ab50ab9c48f0'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('backtest_positions',
    sa.Column('position_id', sa.UUID(), nullable=False),
    sa.Column('backtest_id', sa.UUID(), nullable=False),
    sa.Column('instrument', sa.String(), nullable=False),
    sa.Column('side', sa.String(), nullable=False),
    sa.Column('order_type', sa.String(), nullable=False),
    sa.Column('starting_amount', sa.Float(), nullable=False),
    sa.Column('current_amount', sa.Float(), nullable=True),
    sa.Column('price', sa.Float(), nullable=True),
    sa.Column('limit_price', sa.Float(), nullable=True),
    sa.Column('stop_price', sa.Float(), nullable=True),
    sa.Column('tp_price', sa.Float(), nullable=True),
    sa.Column('sl_price', sa.Float(), nullable=True),
    sa.Column('realised_pnl', sa.Float(), nullable=True),
    sa.Column('unrealised_pnl', sa.Float(), nullable=True),
    sa.Column('status', sa.String(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('close_price', sa.Float(), nullable=True),
    sa.Column('closed_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('extras', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['backtest_id'], ['backtests.backtest_id'], ),
    sa.PrimaryKeyConstraint('position_id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('backtest_positions')
    # ### end Alembic commands ###
