"""add backtest table and updated strategy versions and positions table

Revision ID: a99604759896
Revises: a69340b4ea8a
Create Date: 2025-09-05 23:19:40.651263

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'a99604759896'
down_revision: Union[str, Sequence[str], None] = 'a69340b4ea8a'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('backtests',
    sa.Column('backtest_id', sa.UUID(), nullable=False),
    sa.Column('version_id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('status', sa.String(), nullable=False),
    sa.Column('total_pnl', sa.Float(), nullable=True),
    sa.Column('starting_balance', sa.Float(), nullable=True),
    sa.Column('end_balance', sa.Float(), nullable=True),
    sa.Column('total_trades', sa.Integer(), nullable=True),
    sa.Column('win_rate', sa.Float(), nullable=True),
    sa.ForeignKeyConstraint(['version_id'], ['strategy_versions.version_id'], ),
    sa.PrimaryKeyConstraint('backtest_id')
    )
    op.add_column('strategy_versions', sa.Column('status', sa.String(), nullable=False))
    op.alter_column('strategy_versions', 'code',
               existing_type=sa.VARCHAR(),
               nullable=True)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('strategy_versions', 'code',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.drop_column('strategy_versions', 'status')
    op.drop_table('backtests')
    # ### end Alembic commands ###
